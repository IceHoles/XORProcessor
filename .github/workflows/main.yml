name: Windows · build (MSYS2 / MinGW-w64 + Qt6 + auto-deploy)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup MSYS2 (toolchain + Qt6)
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-qt6
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-ntldd

      - name: Debug info
        shell: msys2 {0}
        run: |
          echo "MSYSTEM=$MSYSTEM"
          which c++
          c++ --version
          which cmake
          cmake --version
          qmake --version || true
          which ntldd

      - name: Configure & build
        shell: msys2 {0}
        run: |
          set -e
          CMAKE_PREFIX_PATH="/mingw64/lib/cmake"
          mkdir -p build
          cd build
          cmake -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_PREFIX_PATH="${CMAKE_PREFIX_PATH}" \
            -S .. -B .
          JOBS=$(nproc || echo 2)
          cmake --build . --config Release --parallel ${JOBS}

      - name: Deploy Qt dependencies
        shell: msys2 {0}
        run: |
          set -e
          mkdir deploy
          cp build/FileXorProcessor.exe deploy/
      
          echo "=== Поиск зависимостей ==="
          ntldd -R deploy/FileXorProcessor.exe 2>/dev/null || true | grep "=> /mingw64" || true | awk '{print $3}' | sort -u > dll_list.txt
      
          echo "=== Копируем DLL ==="
          while IFS= read -r dll; do
            if [ -f "$dll" ]; then
              echo "Копируем: $dll"
              cp "$dll" deploy/
            fi
          done < dll_list.txt
      
          echo "=== Содержимое deploy/ ==="
          ls -l deploy


      - name: Create ZIP package
        shell: pwsh
        run: |
          Compress-Archive -Path deploy\* -DestinationPath FileXorProcessor-Windows-x64.zip

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: FileXorProcessor-Windows-x64
          path: |
            deploy
            FileXorProcessor-Windows-x64.zip
